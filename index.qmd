---
title: "Game Metrics: Decoding Premier League Outcomes Through Visual Analysis and Data Exploration"
subtitle: "INFO 526 - Project 1"
author: "Group 4 WackyWednesday"
# format: html
editor: visual
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

```{r}
#| label: load-pkgs
#| message: false
#| output: false
#| echo: false
if(!require(pacman))
  install.packages("pacman")

pacman::p_load(
  tidyverse,
  here,
  ggthemes,
  viridis,
  ggcorrplot,
  devtools,
  ragg,
  colorspace,
  sysfonts,
  showtext,
  scales
  )

options(width = 65)

knitr::opts_chunk$set(
  fig.asp = 0.618,
  fig.align = "center",
  fig.retina = 1,
  fig.showtext = T
)
```

```{r}
#| label: load-dataset-colors
#| message: false
#| echo: false
soccer <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-04/soccer21-22.csv')

pal_pl <- c("#F8145C", "#45F2FD", "#30FF86", "#E9FF00")
pal_pl_logo <- "#3d195b"

lab_pl_subtitle <- "Premier League match data, 2021-2022 season"

sysfonts::font_add_google("Poppins")
showtext::showtext_auto()
```

## Abstract

This project explores match data from the English Premier League 2021-2022 season, utilizing visualizations to analyze various aspects of the matches. The dataset includes details such as goals scored, half-time results, fouls committed, and more. Through these visualizations, we aim to uncover insights into team performance, home advantage, and potential biases. By examining patterns and trends in the data, we seek to deepen our understanding of the dynamics within the Premier League. This project serves as a valuable resource for football enthusiasts and analysts interested in exploring the intricacies of professional football matches.

## Introduction

The dataset comes from [`TidyTuesday`](https://github.com/rfordatascience/tidytuesday)'s 04 April 2023 post ["Premier League Match Data 2021-2022"](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-04-04). It is derived from [Evan Gower](https://github.com/evangower)'s [Kaggle post](https://www.kaggle.com/datasets/evangower/premier-league-match-data) of the same name.

The [Premier League](https://www.premierleague.com/) is the foremost league for professional football clubs in England since its creation in 1992. The time period covered in this dataset spans entire 2021 to 2022 Premier League season. The 2021â€“22 Premier League season marked the 30th anniversary of the league.

Variables in this dataset includes teams, referee, and stats by home and away side such as fouls, shots, cards, and point totals. The dataset is in a tabular format with `r nrow(soccer)` rows representing individual matches and `r ncol(soccer)` columns representing each variable, described below. Both categorical and numerical variables are included.

The breakdown of each variable in the data set can be found in the [codebook](https://github.com/INFO-526-S24/project-01-WackyWednesday/blob/main/data/README.md) as well as the [project proposal](https://info-526-s24.github.io/project-01-WackyWednesday/proposal.html).

In our analysis we will be focusing on the following variables:

-  `HomeTeam` (character): The home team.
-  `AwayTeam` (character): The away team.
-  `FTHG` (double): Full-time home goals.
-  `FTAG` (double): Full-time away goals.
-  `FTR` (character): Full-time result.
-  `HTHG` (double): Half-time home goals.
-  `HTAG` (double): Half-time away goals.
-  `HTR` (character): Half-time result.
- `HF` (double): Number of fouls by the home team.
- `AF` (double): Number of fouls by the away team.
- `HY` (double): Number of yellow cards received by the home team.
- `AY` (double): Number of yellow cards received by the away team.
- `HR` (double): Number of red cards received by the home team.
- `AR` (double): Number of red cards received by the away team.

This dataset is ideal for analytical projects aiming to understand football dynamics and team strategies throughout the season.

**Reason for Choosing this Dataset**

We chose this data set because it provides comprehensive statistics contributing to the outcome of football matches. Therefore, we can explore the interesting topic of the potential existence of bias against away teams in the English Premier League. The availability of data allows us to use variables such as shots on goal or create new variables such as calculating the ratio of yellow cards to fouls to answer this question of bias. Some members of the group are also quite passionate about soccer, which definitely convinced us to use this data set!

## Question 1

### Introduction

*INSERT TEXT -- DELETE THIS TEXT WHEN DONE.*
What effect (if any) does being the "home" team versus being the "away" team affect the teams' performances?

**Question 1A**

Do the number of goals at half-time determine the final outcome? Does this relationship change between home and away teams?

**Question 1B**

Does home-team advantage play a major role in the final match outcome?

### Approach

Part A: The variables used to answer this question are half-time home goals (`HTHG`), full-time home goals (`FTHG`), half-time away goals (`HTAG`), and full-time away goals (`HTHG`). A scatterplot is created to quantify the correlation between goals at half-time and goals at full-time (end of match) and is color-coded based on home versus away teams. Linear regressions are performed separately for home team and away team data and correlation coefficients are reported. Scatterplot and linear regression analysis is chosen because they directly determine how strongly two variables are related to each other.

Part B: Using the Full Time Result (`FTR`) variable, home advantage and away advantage are categorized into a new Home_Advantage variable. The advantage is determined through the number of wins of each team. If the Result is "H", it will be added to home team victory and is therefore counted as home team advantage. If not, it will be added to away team victory and is counted as away team advantage. This information is summarized in a bar plot for Total Games to find the total goals scored by individual team in home and away. An advantage summary is created and combined together to form a new Total goals variable. The Home team, Total variable is then used as an aesthetic layer and a bar plot is created side by side to interpret the outcome for all 20 teams.

### Analysis

#### Question 1A: Correlation between half-time and full-time goals.

```{r}
#| label: q1_goals
#| message: false
#| warning: false

#Create tibbles based on if the home or away team scored the goals. This makes it easier to color-code the scatterplot and calculate separate linear regressions later.
home_goals <- tibble(soccer$HTHG, soccer$FTHG)
home_goals <- home_goals %>% 
  rename(
     'half' = 'soccer$HTHG',
     'full' = 'soccer$FTHG'
  )

away_goals <- tibble(soccer$HTAG, soccer$FTAG)
away_goals <- away_goals %>% 
  rename(
    'half' = 'soccer$HTAG',
    'full' = 'soccer$FTAG'
  )

#Calculate correlation coefficients for home and away data sets.
home_r <- cor(home_goals$half, home_goals$full)
away_r <- cor(away_goals$half, away_goals$full)

#Create scatterplot with two regression lines for home and away teams, respectively. Add number of points and correlation coefficients to plot.
q1_goals <- ggplot() + 
  geom_jitter(data = home_goals, aes(x = half, y = full, color = 'Home'), width = 0.7) +
  geom_smooth(data = home_goals, aes(x = half, y = full, color = 'Home'), method = lm, se = FALSE) +
  geom_jitter(data = away_goals, aes(x = half, y = full, color = 'Away'), width = 0.7) +
  geom_smooth(data = away_goals, aes(x = half, y = full, color = 'Away'), method = lm,  se = FALSE) + 
  xlim(0, 4) +
  geom_label(aes(x = 0.25, y = 7, label= 'N = 380')) +
  geom_label(aes(x = 3.7, y = 5.5, label= 'r = 0.72', color = 'Home'), show.legend  = FALSE) +
  geom_label(aes(x = 3.7, y = 4.2, label= 'r = 0.70', color = 'Away'), show.legend = FALSE) +
  labs( x = 'Goals at half-time',
        y = 'Goals at full-time',
        color = 'Team') +
  scale_color_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) + 
  theme_classic(base_size = 12) +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo))

#Suppress warning messages when printing ggplot object.
suppressMessages(print(q1_goals))

```

#### Question 1B: Total games won by home and away teams.

```{r}
#| label: q1ii_Totalgames_by_Home_and_Away
#| message: false
#| warning: false

# Create a variable for home team advantage
soccer <- soccer %>%
  mutate(HomeAdvantage = ifelse(FTR == "H", "Home Team Win", "Away Team Win"))

# Analyze home and away team advantage
advantage_summary <- soccer %>%
  group_by(HomeAdvantage) %>%
  summarise(TotalGames = n())

# Print the result
print(advantage_summary)
```

```{r}
# Bar plot for home and away team advantage

ggplot(advantage_summary, aes(x = HomeAdvantage, y = TotalGames, fill = HomeAdvantage)) +
  geom_bar(stat = "identity") +
  labs(title = "Distribution of Home and Away Team Wins",
       x = "Win_Count", y = "Total Games") +
  # scale_fill_manual(values = c("Home Team Win" = "lightgreen", "Away Team Win" = "red")) +
  scale_fill_manual(
    breaks = c("Home Team Win", "Away Team Win"),
    labels = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 15)
  )
  # theme_minimal()
```

```{r}
total_home_goals <-soccer %>%
  group_by(HomeTeam) %>%
  summarize(Total_Home_goals = sum(FTHG))
 
total_away_goals <-soccer %>%
  group_by(AwayTeam) %>%
  summarize(Total_Away_goals = sum(FTAG))

print(total_home_goals)
print(total_away_goals)
```

```{r}
# Merge the data for home and away goals
total_goals <- merge(total_home_goals, total_away_goals, by.x = "HomeTeam", by.y = "AwayTeam", all = TRUE)

total_goals_long <- gather(total_goals, key = "TeamType", value = "TotalGoals", -HomeTeam)

# Create a side-by-side bar plot
ggplot(total_goals_long , aes(x = HomeTeam, y = TotalGoals, fill = TeamType)) +
  geom_bar(position = "dodge", stat = "identity") +
  labs(title = "Total Home and Away Goals by Team",
       x = "Teams on Home and Away", y = "Total Goals") +
  # scale_fill_manual(values = c("Total_Home_goals" = "lightgreen", "Total_Away_goals" = "red")) +
  scale_fill_manual(
    breaks = c("Total_Home_goals", "Total_Away_goals"),
    labels = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 12)
  ) +
  # theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

### Discussion

#### Question 1A

There is a strong correlation between goals scored at half-time and goals scored at full-time. In other words, goals at half-time is a strong indicator of how many goals will be scored at the end of the match. However, there is not a perfect one-to-one relationship between these variables. For example, there are some cases where there are 0 goals scored at half-time, but 4 or 5 goals are scored by the end of the match. This plot also shows that there is slightly higher correlation between half-time and full-time goals for the home team than the away team. However, this does not necessarily determine if there is a home-team advantage because more goals does not necessarily equate to more wins.

#### Question 1B

As per the data_set, the home game winning advantage did not create impact in every game but only in some games whereas for the goal scored ratio in home and away match except few teams, majority of the team scored more goals in home than in away.

## Question 2

### Introduction

*INSERT TEXT -- DELETE THIS TEXT WHEN DONE.*

The correlation between the variables used for the analysis are first scrutinized to reveal information about them.

```{r dev = 'ragg_png'}
#| label: q2_corr_plot
#| message: false

soccer_corr <- soccer |>
  mutate(
    HTFCR = (HR + HY)/ HF,
    ATFCR = (AR + AY/ AF)
  ) |>
  pivot_longer( cols = c( 'HF', 'AF'),
                names_to = 'Team_Fouls',
                values_to = 'Fouls') |>
  pivot_longer( cols = c( 'HY', 'AY'),
                names_to = 'Team_Yellows',
                values_to = 'yellow_cards') |>
  pivot_longer( cols = c( 'HR', 'AR'),
                names_to = 'Team_Reds',
                values_to = 'red_cards') |>
  pivot_longer(
    cols = c( 'HTFCR', 'ATFCR'),
    names_to = 'Team',
    values_to = 'FCR'
  ) |>
  pivot_longer(
    cols = c('FTHG', 'FTAG'),
    names_to = 'TFTG', values_to = 'FTG'
  )

soccer_corr <- soccer_corr |>
  select( red_cards, yellow_cards, Fouls, FCR, FTG ) |>
  rename( 'ðŸŸ¥' = red_cards, 'ðŸŸ¨' = yellow_cards )

cor_matrix <- round(cor(soccer_corr) , 2)

ggcorrplot(cor_matrix,
           hc.order = TRUE,
           type = 'lower',
           lab = TRUE) +
  theme_minimal() +
  theme(
    legend.position = 'none',
    panel.grid = element_blank(),
    text = element_text(
      face = "bold",
      color = "#3d195b"
    ),
    plot.title.position = "plot"
  ) +
  labs(
    x = NULL,
    y = NULL,
    title = "The correlation between the variables used for the analysis",
    subtitle = paste0("Card to Foul Ratio(FCR), Yellow cards(ðŸŸ¨),\n",
                      "Red cards(ðŸŸ¥), and Full Time Goals (FTG)")
  )
```

*INSERT TEXT -- DELETE THIS TEXT WHEN DONE.*

### Approach

*Approach goes here -- DELETE THIS TEXT WHEN DONE.*

#### Question 2A

To determine if there is home-team bias regarding penalties (fouls, yellow cards, and red cards), we plotted the distribution of the total number of games in the season in which a certain number of penalties were given. Although this can be shown with a density plot or area plot, it is easier to see at precisely which penalty counts were more often toward or against each team. Since most games had no red cards given at all, and the maximum number of red cards given was only two, both red cards and yellow cards are plotted on the same facet. The distribution of fouls is much greater, as every single game had at least one foul given. The two team types are mapped to both color and shape for accessibility.

#### Question 2B

*APPROACH FOR 2B GOES HERE -- DELETE THIS TEXT WHEN DONE.*

### Analysis

#### Question 2A: Penalties by Team

```{r}
#| label: q2_penalties
#| message: false
#| fig.width: 10

q2_soccer_pen <- soccer |> 
  select(HF, AF, HY, AY, HR, AR) |>
  rename(
    yellow_home = HY,
    yellow_away = AY,
    foul_home = HF,
    foul_away = AF,
    red_home = HR,
    red_away = AR
  ) |>
  mutate(game_number = row_number()) |> 
  group_by(game_number) |> 
  pivot_longer(
    cols = c(yellow_home, red_home,
             yellow_away, red_away,
             foul_away, foul_home),
    names_to = "pen_type",
    values_to = "pen_count"
  ) |> 
  mutate(
    pen_cat = case_when(
      str_detect(pen_type, "yellow") ~ "yellow",
      str_detect(pen_type, "red") ~ "red",
      str_detect(pen_type, "foul") ~ "foul"
    ),
    h_a = case_when(
      str_detect(pen_type, "home") ~ "Home",
      str_detect(pen_type, "away") ~ "Away"
    )
  ) |>
  group_by(h_a, pen_count, pen_cat) |> 
  select(!pen_type) |> 
  summarize(tot = n()) |> 
  mutate(
    pen_cf = case_when(
      pen_cat == "foul" ~ "Fouls",
      TRUE ~ "Cards"
    )
  )

q2_penalties_viz <- ggplot(q2_soccer_pen,
                           aes(x = pen_count,
                               y = tot,
                               group = pen_cat,
                               color = h_a)) +
  facet_wrap(~pen_cf,
             ncol = 1,
             scales = "free"
             ) +
  geom_line(
    data = filter(q2_soccer_pen, pen_cat == "red"),
    aes(group = interaction(pen_cat, h_a)),
    lineend = "round",
    linewidth = 10,
    alpha = 0.05,
    color = "red"
  ) +
  geom_line(
    data = filter(q2_soccer_pen, pen_cat == "yellow"),
    aes(group = interaction(pen_cat, h_a)),
    lineend = "round",
    linewidth = 10,
    alpha = 0.1,
    color = "yellow"
  ) +
  geom_line(
    data = filter(q2_soccer_pen, pen_cat == "foul"),
    aes(group = interaction(pen_cat, h_a)),
    lineend = "round",
    linewidth = 10,
    alpha = 0.05,
    color = "purple"
  ) +
  geom_line(
    aes(group = interaction(pen_cat, h_a)),
    linewidth = 1,
    alpha = 0.5
  ) +
  geom_point(
    aes(shape = h_a),
    size = 4,
    stroke = 1.5
  ) +
  geom_text(
    data = data.frame(
      "label" = c("Red Cards", "Yellow Cards", "Fouls"),
      x = c(1, 1.75, 4),
      y = c(300, 170, 30),
      pen_cf = c("Cards", "Cards", "Fouls")
    ),
    aes(x = x, y = y, group = 1, label = label),
    color = pal_pl_logo,
    family = "Poppins",
    fontface = "bold",
    size = 5
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(7)
  ) +
  scale_color_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  scale_shape_manual(
    breaks = c("Home", "Away"),
    values = c(5, 4)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 15),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.85),
    legend.box.background = element_rect(),
    strip.background = element_blank(),
    strip.text.x = element_blank(),
    plot.title.position = "plot"
  ) +
  labs(
    color = "Team",
    shape = "Team",
    x = "Total given in a game",
    y = "Number of games",
    title = "Number of English football games by amounts of penalties",
    subtitle = lab_pl_subtitle,
    fill = "Team"
  )

q2_penalties_viz
```

#### Question 2B: Cards:Fouls Ratio by Team

```{r}
#| label: q2_ctf
#| message: false
#| fig.width: 10

soccer_ctf <- soccer |>
  mutate(
    HTFCR = (HR + HY)/ HF,
    ATFCR = (AR + AY/ AF)
  ) |>
  rename(
    'Home' = 'HTFCR',
    'Away' = 'ATFCR'
  ) |> 
  pivot_longer(
    cols = c('Home', 'Away'),
    names_to = 'Team',
    values_to = 'FCR'
  )

ggplot(soccer_ctf, aes(x = FCR)) +
  geom_density(
    aes(fill = Team, color = Team),
    alpha = 0.25,
    linewidth = 1
  ) +
  scale_fill_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  scale_color_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 15),
    legend.position = "inside",
    legend.position.inside = c(0.75, 0.75),
    legend.box.background = element_rect()
  ) +
  labs(
    x = 'Card:Foul Ratio',
    y = 'Density',
    title = 'The distribution of card:foul ratios across teams',
    subtitle = lab_pl_subtitle,
    caption = 'Data from TidyTuesday'
  )
```

### Discussion

#### Question 2A

From the chart of the number of games by amount of penalties, there does not appear to be any major trends regarding a home-team bias when it comes to Cards. That said, there are a couple more instances of the home team receiving zero cards (both yellow and red) compared to the away team. The number of fouls does vary, however. The number of instances of a team with more fouls wavers, but generally there are more instances of very high foul counts (18+) for the away team. Interestingly, there is noticeably more instances of games in which the home team received a moderate number of fouls (from 11-13). In general, it also appears that the away team is right-skewed for the total number of fouls given, while the home team is left-skewed.

#### Question 2B

*Discussion goes here; DELETE THIS TEXT WHEN DONE*

#### Additional information

The average penalties by team are provided in the following summary table:

```{r}
#| label: q2_ctf2_wrangle
#| message: false

#make new Dataset
# Selecting only the necessary columns 

Compare_dataset <- soccer[, c("HomeTeam", "AwayTeam", "HF", "HR", "HY", "AF", "AR", "AY")] # Avoid division by zero by adding a small number (epsilon) to the denominator 


Compare_dataset$HCO = (Compare_dataset$HY + Compare_dataset$HR+epsilon)/Compare_dataset$HF 
# Calculating Away Foul Ratio 
Compare_dataset$ACO = (Compare_dataset$AY + Compare_dataset$AR + epsilon)/Compare_dataset$AF

# Compare_dataset

# Melt the dataset for plotting (tidyr pivot_longer is the newer alternative to gather) 

plot_data <- Compare_dataset %>% 
  pivot_longer(cols = c(HF, HR, HY, AF, AR, AY,HCO,ACO), names_to = "Category", values_to = "Count")%>%
  mutate(Type = case_when( str_detect(Category, "F") ~ "Fouls", 
                           str_detect(Category, "R") ~ "Red Cards", 
                           str_detect(Category, "Y") ~ "Yellow Cards", 
                           str_detect(Category, "C")~"Fouls Ratio"), 
         Team = case_when( str_detect(Category, "^H") ~ "Home", 
                           str_detect(Category, "^A") ~ "Away" )) %>% 
  select(-Category) %>% 
  group_by(Type, Team) %>% 
  summarise(AverageCount = mean(Count, na.rm = TRUE)) 

# Summary table
plot_data |> 
  pivot_wider(
    names_from = Type,
    values_from = AverageCount
  ) |> 
  print()
```

Based on the overall averages, the away team on average receives a greater number of penalties per game. However, it is still by a relatively slim margin. The table is shown below in chart form to visualize how close these averages are:

```{r}
#| label: q2_ctf2_viz
#| message: false

ggplot(plot_data, aes(x = Type,
                      y = AverageCount,
                      fill = Team)) + 
  geom_bar(stat = "identity", 
           position = position_dodge(width = 0.9)) + 
  geom_text(
    aes(label = round(AverageCount, 2), 
        y = AverageCount + 0.02),  # Adjust the y position for visibility 
    position = position_dodge(width = 0.9), 
    vjust = 0, # Vertical adjustment; 0 means right above the bar 
    size = 5, # Text size, adjust as needed 
    color = pal_pl_logo,
    family = "Poppins",
    fontface = "bold"
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 15),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.85),
    legend.box.background = element_rect(),
    plot.title.position = "plot"
  ) +
  labs(
    title = paste0("Average Fouls, Red Cards, and ",
                   "Yellow Cards\nfor Home vs. Away Teams"),
    subtitle = lab_pl_subtitle,
    x = NULL,
    y = "Count"
  ) + 
  scale_fill_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  )
```

### 
