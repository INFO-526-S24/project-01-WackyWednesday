---
title: "Game Metrics: Decoding Premier League Outcomes"
subtitle: "INFO 526 - Spring 2024 - Project 1"
author: "Sanja Dmitrovic, Jiayue He, Gillian McGinnis, Valerie Okine, Sai Navya Reddy, Akash Srinivasan"
title-slide-attributes:
  data-background-image: images/football_match.jpg
  data-background-size: cover
  data-background-opacity: "0.3"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r}
#| label: prez_load-pkgs
#| message: false
#| output: false
#| echo: false
if(!require(pacman))
  install.packages("pacman")

pacman::p_load(
  tidyverse,
  here,
  ggthemes,
  viridis,
  ggcorrplot,
  devtools,
  ragg,
  colorspace,
  sysfonts,
  showtext,
  scales
  )

options(width = 65)

knitr::opts_chunk$set(
  fig.asp = 0.618,
  fig.align = "center",
  fig.retina = 1,
  fig.showtext = T
)
```

```{r}
#| label: prez_setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

```{r}
#| label: prez_load-dataset-colors
#| message: false
#| echo: false
soccer <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-04/soccer21-22.csv')

pal_pl <- c("#F8145C", "#45F2FD", "#30FF86", "#E9FF00")
pal_pl_logo <- "#3d195b"

lab_pl_subtitle <- "Premier League match data, 2021-2022 season"

sysfonts::font_add_google("Poppins")
showtext::showtext_auto()
```

## Dataset of choice

<!-- ::: incremental -->

### Premier League match data

English football, 2021-2022 season

Source: TidyTuesday 04 April 2023, `soccer`
<!-- This Dataset derived from TidyTuesday's April 4, 2023 post "Premier League Match Data 2021-2022". The data is sourced from Evan Gower's Kaggle post of the same name. Variables included are teams, referees, and match statistics for home and away sides such as fouls, shots, cards, and point totals. Tabular format with rows representing individual matches and columns representing variables. The dataset contains both categorical and numerical variables. It provides insights into team performance, referee assignments, and match statistics for the season. -->
<!-- ::: -->

## Question 1

### Scores

1A. Do the number of goals at **half-time** determine the final outcome?

1B. Does **home-team advantage** play any role in the final outcome?

<!-- ## APPROACH -->

<!-- #### PART A -->

<!-- ::: nonincremental -->
<!-- In Part A, we examine the correlation between half-time and full-time goals scored by home and away teams in the English Premier League 2021-2022 season. Using variables like HTHG, FTHG, HTAG, and FTAG, we create scatterplots, color-coded by team type. Separate linear regressions are conducted for home and away teams to determine correlation coefficients. This approach directly assesses the relationship strength between these variables, offering insights into match dynamics. -->
<!-- ::: -->

<!-- #### PART B -->

<!-- ::: nonincremental -->
<!-- In Part B, we categorize home and away advantages in the English Premier League 2021-2022 season based on the Full Time Result (FTR) variable. A bar plot summarizes total games and goals scored by each team at home and away. We then create a new variable, Total goals, by combining advantage summaries with total goals. Finally, side-by-side bar plots interpret outcomes for all 20 teams using the Home team and Total variable -->
<!-- ::: -->

<!-- ## Plots of Question 1 -->

## Plot 1A: Half-Time v. Full-Time

```{r}
#| label: prez_q1_goals
#| message: false
#| warning: false

#Create tibbles based on if the home or away team scored the goals. This makes it easier to color-code the scatterplot and calculate separate linear regressions later.
home_goals <- tibble(soccer$HTHG, soccer$FTHG)
home_goals <- home_goals %>% 
  rename(
     'half' = 'soccer$HTHG',
     'full' = 'soccer$FTHG'
  )

away_goals <- tibble(soccer$HTAG, soccer$FTAG)
away_goals <- away_goals %>% 
  rename(
    'half' = 'soccer$HTAG',
    'full' = 'soccer$FTAG'
  )

#Calculate correlation coefficients for home and away data sets.
home_r <- cor(home_goals$half, home_goals$full)
away_r <- cor(away_goals$half, away_goals$full)

#Create scatterplot with two regression lines for home and away teams, respectively. Add number of points and correlation coefficients to plot.
q1_goals <- ggplot() + 
  geom_jitter(data = home_goals, aes(x = half, y = full, color = 'Home'), width = 0.7) +
  geom_smooth(data = home_goals, aes(x = half, y = full, color = 'Home'), method = lm, se = FALSE) +
  geom_jitter(data = away_goals, aes(x = half, y = full, color = 'Away'), width = 0.7) +
  geom_smooth(data = away_goals, aes(x = half, y = full, color = 'Away'), method = lm,  se = FALSE) + 
  xlim(0, 4) +
  geom_label(aes(x = 0.25, y = 7, label= 'N = 380')) +
  geom_label(aes(x = 3.7, y = 5.5, label= 'r = 0.72', color = 'Home'), show.legend  = FALSE) +
  geom_label(aes(x = 3.7, y = 4.2, label= 'r = 0.70', color = 'Away'), show.legend = FALSE) +
  labs( x = 'Goals at half-time',
        y = 'Goals at full-time',
        color = 'Team') +
  scale_color_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) + 
  theme_classic(base_size = 12) +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo))

#Suppress warning messages when printing ggplot object.
suppressMessages(print(q1_goals))

```

## Plot 1B: Home-Team Advantage

```{r}
#| label: prez_q1ii_Totalgames_by_Home_and_Away
#| message: false
#| warning: false


soccer <- soccer %>%
  mutate(HomeAdvantage = ifelse(FTR == "H", "Home Team Win", "Away Team Win"))

# Analyze home and away team advantage
advantage_summary <- soccer %>%
  group_by(HomeAdvantage) %>%
  summarise(TotalGames = n())

total_home_goals <-soccer %>%
  group_by(HomeTeam) %>%
  summarize(Total_Home_goals = sum(FTHG))
 
total_away_goals <-soccer %>%
  group_by(AwayTeam) %>%
  summarize(Total_Away_goals = sum(FTAG))

# Merge the data for home and away goals
total_goals <- merge(total_home_goals, total_away_goals, by.x = "HomeTeam", by.y = "AwayTeam", all = TRUE)

total_goals_long <- gather(total_goals, key = "TeamType", value = "TotalGoals", -HomeTeam)

# Create a side-by-side bar plot
ggplot(total_goals_long , aes(x = HomeTeam, y = TotalGoals, fill = TeamType)) +
  geom_bar(position = "dodge", stat = "identity") +
  labs(title = "Total Home and Away Goals by Team",
       x = "Teams on Home and Away", y = "Total Goals") +
  # scale_fill_manual(values = c("Total_Home_goals" = "lightgreen", "Total_Away_goals" = "red")) +
  scale_fill_manual(
    breaks = c("Total_Home_goals", "Total_Away_goals"),
    labels = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 12)
  ) +
  # theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Question 2

### Penalties

<!-- ::: nonincremental -->
<!-- For Question 2, our focus shifts towards exploring the potential impact of home versus away team on the occurance of penalties. This question delves into whether playing at home or away influences the likelihood of a team gaining fouls, yellow cards, and red cards. Based on our assumption, we want to see if there is a notable bias against the away team in terms of penalties awarded, suggesting a possible psychological or referee bias factor during game. -->
<!-- ::: -->

<!-- ## Question 2 Break Down -->

2A. Is there a noticeable **bias against the away team** in terms of penalties recieved?

2B. How do the **ratios of cards to fouls** differ between home and away teams?

<!-- ## Approach for Question 2 -->

<!-- To analyze potential home-team bias in penalties, we examined the frequency of penalties awarded per game in the season, represented by a distribution plot. Red and yellow cards, often clustered in low counts, were combined for clarity. Fouls, more prevalent in every game, showed a broader distribution. Team types were distinguished by color and shape for better interpretation. -->

<!-- ## Plots of Question 2 -->

## Plot 2A: Home v. Away Penalties

```{r}
#| label: prez_q2_penalties
#| message: false
#| fig.width: 10

q2_soccer_pen <- soccer |> 
  select(HF, AF, HY, AY, HR, AR) |>
  rename(
    yellow_home = HY,
    yellow_away = AY,
    foul_home = HF,
    foul_away = AF,
    red_home = HR,
    red_away = AR
  ) |>
  mutate(game_number = row_number()) |> 
  group_by(game_number) |> 
  pivot_longer(
    cols = c(yellow_home, red_home,
             yellow_away, red_away,
             foul_away, foul_home),
    names_to = "pen_type",
    values_to = "pen_count"
  ) |> 
  mutate(
    pen_cat = case_when(
      str_detect(pen_type, "yellow") ~ "yellow",
      str_detect(pen_type, "red") ~ "red",
      str_detect(pen_type, "foul") ~ "foul"
    ),
    h_a = case_when(
      str_detect(pen_type, "home") ~ "Home",
      str_detect(pen_type, "away") ~ "Away"
    )
  ) |>
  group_by(h_a, pen_count, pen_cat) |> 
  select(!pen_type) |> 
  summarize(tot = n()) |> 
  mutate(
    pen_cf = case_when(
      pen_cat == "foul" ~ "Fouls",
      TRUE ~ "Cards"
    )
  )

q2_penalties_viz <- ggplot(q2_soccer_pen,
                           aes(x = pen_count,
                               y = tot,
                               group = pen_cat,
                               color = h_a)) +
  facet_wrap(~pen_cf,
             ncol = 1,
             scales = "free"
             ) +
  geom_line(
    data = filter(q2_soccer_pen, pen_cat == "red"),
    aes(group = interaction(pen_cat, h_a)),
    lineend = "round",
    linewidth = 10,
    alpha = 0.05,
    color = "red"
  ) +
  geom_line(
    data = filter(q2_soccer_pen, pen_cat == "yellow"),
    aes(group = interaction(pen_cat, h_a)),
    lineend = "round",
    linewidth = 10,
    alpha = 0.1,
    color = "yellow"
  ) +
  geom_line(
    data = filter(q2_soccer_pen, pen_cat == "foul"),
    aes(group = interaction(pen_cat, h_a)),
    lineend = "round",
    linewidth = 10,
    alpha = 0.05,
    color = "purple"
  ) +
  geom_line(
    aes(group = interaction(pen_cat, h_a)),
    linewidth = 1,
    alpha = 0.5
  ) +
  geom_point(
    aes(shape = h_a),
    size = 4,
    stroke = 1.5
  ) +
  geom_text(
    data = data.frame(
      "label" = c("Red Cards", "Yellow Cards", "Fouls"),
      x = c(1, 1.75, 4),
      y = c(300, 170, 30),
      pen_cf = c("Cards", "Cards", "Fouls")
    ),
    aes(x = x, y = y, group = 1, label = label),
    color = pal_pl_logo,
    family = "Poppins",
    fontface = "bold",
    size = 5
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(7)
  ) +
  scale_color_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  scale_shape_manual(
    breaks = c("Home", "Away"),
    values = c(5, 4)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 15),
    #legend.position = "inside",
    #legend.position.inside = c(0.85, 0.85),
    legend.box.background = element_rect(),
    strip.background = element_blank(),
    strip.text.x = element_blank(),
    plot.title.position = "plot"
  ) +
  labs(
    color = "Team",
    shape = "Team",
    x = "Total given in a game",
    y = "Number of games",
    title = "Number of English football games by amounts of penalties",
    subtitle = lab_pl_subtitle,
    fill = "Team"
  )

q2_penalties_viz
```

## Plot 2B: Cards:Fouls Ratio

```{r}
#| label: prez_q2_ctf
#| message: false
#| fig.width: 10

soccer_ctf <- soccer |>
  mutate(
    HTFCR = (HR + HY)/ HF,
    ATFCR = (AR + AY)/ AF
  ) |>
  rename(
    'Home' = 'HTFCR',
    'Away' = 'ATFCR'
  ) |> 
  pivot_longer(
    cols = c('Home', 'Away'),
    names_to = 'Team',
    values_to = 'FCR'
  )

ggplot(soccer_ctf, aes(x = FCR)) +
  geom_density(
    aes(fill = Team, color = Team),
    alpha = 0.25,
    linewidth = 1
  ) +
  scale_fill_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  scale_color_manual(
    breaks = c("Home", "Away"),
    values = darken(pal_pl, 0.3)
  ) +
  theme_classic() +
  theme(
    text = element_text("Poppins",
                        face = "bold",
                        color = pal_pl_logo,
                        size = 15),
    #legend.position = "inside",
    #legend.position.inside = c(0.75, 0.75),
    legend.box.background = element_rect()
  ) +
  labs(
    x = 'Card:Foul Ratio',
    y = 'Density',
    title = 'The distribution of card:foul ratios across teams',
    subtitle = lab_pl_subtitle,
    caption = 'Data from TidyTuesday'
  )
```
